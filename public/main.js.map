{
  "version": 3,
  "sources": ["../node_modules/@better-fetch/fetch/src/error.ts", "../node_modules/@better-fetch/fetch/src/plugins.ts", "../node_modules/@better-fetch/fetch/src/retry.ts", "../node_modules/@better-fetch/fetch/src/auth.ts", "../node_modules/@better-fetch/fetch/src/create-fetch/schema.ts", "../node_modules/@better-fetch/fetch/src/create-fetch/index.ts", "../node_modules/@better-fetch/fetch/src/utils.ts", "../node_modules/@better-fetch/fetch/src/url.ts", "../node_modules/@better-fetch/fetch/src/fetch.ts", "../node_modules/nanostores/clean-stores/index.js", "../node_modules/nanostores/atom/index.js", "../node_modules/nanostores/lifecycle/index.js", "../node_modules/better-auth/dist/client.js", "../client/auth.js"],
  "sourcesContent": ["export class BetterFetchError extends Error {\n\tconstructor(\n\t\tpublic status: number,\n\t\tpublic statusText: string,\n\t\tpublic error: any,\n\t) {\n\t\tsuper(statusText || status.toString(), {\n\t\t\tcause: error,\n\t\t});\n\t}\n}\n", "import type { ZodSchema } from \"zod\";\nimport { Schema } from \"./create-fetch\";\nimport type { BetterFetchOption } from \"./types\";\nimport { BetterFetchError } from \"./error\";\n\nexport type RequestContext<T extends Record<string, any> = any> = {\n\turl: URL;\n\theaders: Headers;\n\tbody: any;\n\tmethod: string;\n\tsignal: AbortSignal;\n} & BetterFetchOption<any, any, any, T>;\nexport type ResponseContext = {\n\tresponse: Response;\n\trequest: RequestContext;\n};\nexport type SuccessContext<Res = any> = {\n\tdata: Res;\n\tresponse: Response;\n\trequest: RequestContext;\n};\nexport type ErrorContext = {\n\tresponse: Response;\n\trequest: RequestContext;\n\terror: BetterFetchError & Record<string, any>;\n};\nexport interface FetchHooks<Res = any> {\n\t/**\n\t * a callback function that will be called when a\n\t * request is made.\n\t *\n\t * The returned context object will be reassigned to\n\t * the original request context.\n\t */\n\tonRequest?: <T extends Record<string, any>>(\n\t\tcontext: RequestContext<T>,\n\t) => Promise<RequestContext | void> | RequestContext | void;\n\t/**\n\t * a callback function that will be called when\n\t * response is received. This will be called before\n\t * the response is parsed and returned.\n\t *\n\t * The returned response will be reassigned to the\n\t * original response if it's changed.\n\t */\n\tonResponse?: (\n\t\tcontext: ResponseContext,\n\t) =>\n\t\t| Promise<Response | void | ResponseContext>\n\t\t| Response\n\t\t| ResponseContext\n\t\t| void;\n\t/**\n\t * a callback function that will be called when a\n\t * response is successful.\n\t */\n\tonSuccess?: (context: SuccessContext<Res>) => Promise<void> | void;\n\t/**\n\t * a callback function that will be called when an\n\t * error occurs.\n\t */\n\tonError?: (context: ErrorContext) => Promise<void> | void;\n\t/**\n\t * a callback function that will be called when a\n\t * request is retried.\n\t */\n\tonRetry?: (response: ResponseContext) => Promise<void> | void;\n\t/**\n\t * Options for the hooks\n\t */\n\thookOptions?: {\n\t\t/**\n\t\t * Clone the response\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Response/clone\n\t\t */\n\t\tcloneResponse?: boolean;\n\t};\n}\n\n/**\n * A plugin that returns an id and hooks\n */\nexport type BetterFetchPlugin = {\n\t/**\n\t * A unique id for the plugin\n\t */\n\tid: string;\n\t/**\n\t * A name for the plugin\n\t */\n\tname: string;\n\t/**\n\t * A description for the plugin\n\t */\n\tdescription?: string;\n\t/**\n\t * A version for the plugin\n\t */\n\tversion?: string;\n\t/**\n\t * Hooks for the plugin\n\t */\n\thooks?: FetchHooks;\n\t/**\n\t * A function that will be called when the plugin is\n\t * initialized. This will be called before the any\n\t * of the other internal functions.\n\t *\n\t * The returned options will be merged with the\n\t * original options.\n\t */\n\tinit?: (\n\t\turl: string,\n\t\toptions?: BetterFetchOption,\n\t) =>\n\t\t| Promise<{\n\t\t\t\turl: string;\n\t\t\t\toptions?: BetterFetchOption;\n\t\t  }>\n\t\t| {\n\t\t\t\turl: string;\n\t\t\t\toptions?: BetterFetchOption;\n\t\t  };\n\t/**\n\t * A schema for the plugin\n\t */\n\tschema?: Schema;\n\t/**\n\t * Additional options that can be passed to the plugin\n\t */\n\tgetOptions?: () => ZodSchema;\n};\n\nexport const initializePlugins = async (\n\turl: string,\n\toptions?: BetterFetchOption,\n) => {\n\tlet opts = options || {};\n\tconst hooks: {\n\t\tonRequest: Array<FetchHooks[\"onRequest\"]>;\n\t\tonResponse: Array<FetchHooks[\"onResponse\"]>;\n\t\tonSuccess: Array<FetchHooks[\"onSuccess\"]>;\n\t\tonError: Array<FetchHooks[\"onError\"]>;\n\t\tonRetry: Array<FetchHooks[\"onRetry\"]>;\n\t} = {\n\t\tonRequest: [options?.onRequest],\n\t\tonResponse: [options?.onResponse],\n\t\tonSuccess: [options?.onSuccess],\n\t\tonError: [options?.onError],\n\t\tonRetry: [options?.onRetry],\n\t};\n\tif (!options || !options?.plugins) {\n\t\treturn {\n\t\t\turl,\n\t\t\toptions: opts,\n\t\t\thooks,\n\t\t};\n\t}\n\tfor (const plugin of options?.plugins || []) {\n\t\tif (plugin.init) {\n\t\t\tconst pluginRes = await plugin.init?.(url.toString(), options);\n\t\t\topts = pluginRes.options || opts;\n\t\t\turl = pluginRes.url;\n\t\t}\n\t\thooks.onRequest.push(plugin.hooks?.onRequest);\n\t\thooks.onResponse.push(plugin.hooks?.onResponse);\n\t\thooks.onSuccess.push(plugin.hooks?.onSuccess);\n\t\thooks.onError.push(plugin.hooks?.onError);\n\t\thooks.onRetry.push(plugin.hooks?.onRetry);\n\t}\n\n\treturn {\n\t\turl,\n\t\toptions: opts,\n\t\thooks,\n\t};\n};\n", "export type RetryCondition = (\n\tresponse: Response | null,\n) => boolean | Promise<boolean>;\n\nexport type LinearRetry = {\n\ttype: \"linear\";\n\tattempts: number;\n\tdelay: number;\n\tshouldRetry?: RetryCondition;\n};\n\nexport type ExponentialRetry = {\n\ttype: \"exponential\";\n\tattempts: number;\n\tbaseDelay: number;\n\tmaxDelay: number;\n\tshouldRetry?: RetryCondition;\n};\n\nexport type RetryOptions = LinearRetry | ExponentialRetry | number;\n\nexport interface RetryStrategy {\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean>;\n\tgetDelay(attempt: number): number;\n}\n\nclass LinearRetryStrategy implements RetryStrategy {\n\tconstructor(private options: LinearRetry) {}\n\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean> {\n\t\tif (this.options.shouldRetry) {\n\t\t\treturn Promise.resolve(\n\t\t\t\tattempt < this.options.attempts && this.options.shouldRetry(response),\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(attempt < this.options.attempts);\n\t}\n\n\tgetDelay(): number {\n\t\treturn this.options.delay;\n\t}\n}\n\nclass ExponentialRetryStrategy implements RetryStrategy {\n\tconstructor(private options: ExponentialRetry) {}\n\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean> {\n\t\tif (this.options.shouldRetry) {\n\t\t\treturn Promise.resolve(\n\t\t\t\tattempt < this.options.attempts && this.options.shouldRetry(response),\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(attempt < this.options.attempts);\n\t}\n\n\tgetDelay(attempt: number): number {\n\t\tconst delay = Math.min(\n\t\t\tthis.options.maxDelay,\n\t\t\tthis.options.baseDelay * 2 ** attempt,\n\t\t);\n\t\treturn delay;\n\t}\n}\n\nexport function createRetryStrategy(options: RetryOptions): RetryStrategy {\n\tif (typeof options === \"number\") {\n\t\treturn new LinearRetryStrategy({\n\t\t\ttype: \"linear\",\n\t\t\tattempts: options,\n\t\t\tdelay: 1000,\n\t\t});\n\t}\n\n\tswitch (options.type) {\n\t\tcase \"linear\":\n\t\t\treturn new LinearRetryStrategy(options);\n\t\tcase \"exponential\":\n\t\t\treturn new ExponentialRetryStrategy(options);\n\t\tdefault:\n\t\t\tthrow new Error(\"Invalid retry strategy\");\n\t}\n}\n", "import type { BetterFetchOption } from \"./types\";\n\nexport type typeOrTypeReturning<T> = T | (() => T);\n/**\n * Bearer token authentication\n *\n * the value of `token` will be added to a header as\n * `auth: Bearer token`,\n */\nexport type Bearer = {\n\ttype: \"Bearer\";\n\ttoken: typeOrTypeReturning<string | undefined>;\n};\n\n/**\n * Basic auth\n */\nexport type Basic = {\n\ttype: \"Basic\";\n\tusername: typeOrTypeReturning<string | undefined>;\n\tpassword: typeOrTypeReturning<string | undefined>;\n};\n\n/**\n * Custom auth\n *\n * @param prefix - prefix of the header\n * @param value - value of the header\n *\n * @example\n * ```ts\n * {\n *  type: \"Custom\",\n *  prefix: \"Token\",\n *  value: \"token\"\n * }\n * ```\n */\nexport type Custom = {\n\ttype: \"Custom\";\n\tprefix: typeOrTypeReturning<string | undefined>;\n\tvalue: typeOrTypeReturning<string | undefined>;\n};\n\nexport type Auth = Bearer | Basic | Custom;\n\nexport const getAuthHeader = (options?: BetterFetchOption) => {\n\tconst headers: Record<string, string> = {};\n\tconst getValue = (value: typeOrTypeReturning<string | undefined>) =>\n\t\ttypeof value === \"function\" ? value() : value;\n\tif (options?.auth) {\n\t\tif (options.auth.type === \"Bearer\") {\n\t\t\tconst token = getValue(options.auth.token);\n\t\t\tif (!token) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `Bearer ${token}`;\n\t\t} else if (options.auth.type === \"Basic\") {\n\t\t\tconst username = getValue(options.auth.username);\n\t\t\tconst password = getValue(options.auth.password);\n\t\t\tif (!username || !password) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `Basic ${btoa(`${username}:${password}`)}`;\n\t\t} else if (options.auth.type === \"Custom\") {\n\t\t\tconst value = getValue(options.auth.value);\n\t\t\tif (!value) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `${getValue(options.auth.prefix)} ${value}`;\n\t\t}\n\t}\n\treturn headers;\n};\n", "import type { ZodSchema, z } from \"zod\";\nimport type { StringLiteralUnion } from \"../type-utils\";\n\nexport type FetchSchema = {\n\tinput?: ZodSchema;\n\toutput?: ZodSchema;\n\tquery?: ZodSchema;\n\tparams?:\n\t\t| z.ZodObject<{\n\t\t\t\t[key: string]: ZodSchema;\n\t\t  }>\n\t\t| z.ZodOptional<\n\t\t\t\tz.ZodObject<{\n\t\t\t\t\t[key: string]: ZodSchema;\n\t\t\t\t}>\n\t\t  >;\n\tmethod?: Methods;\n};\n\nexport type Methods = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\n\nexport const methods = [\"get\", \"post\", \"put\", \"patch\", \"delete\"];\n\ntype RouteKey = StringLiteralUnion<`@${Methods}/`>;\n\nexport type FetchSchemaRoutes = {\n\t[key in RouteKey]?: FetchSchema;\n};\n\nexport const createSchema = <\n\tF extends FetchSchemaRoutes,\n\tS extends SchemaConfig,\n>(\n\tschema: F,\n\tconfig?: S,\n) => {\n\treturn {\n\t\tschema: schema as F,\n\t\tconfig: config as S,\n\t};\n};\n\nexport type SchemaConfig = {\n\tstrict?: boolean;\n\t/**\n\t * A prefix that will be prepended when it's\n\t * calling the schema.\n\t *\n\t * NOTE: Make sure to handle converting\n\t * the prefix to the baseURL in the init\n\t * function if you you are defining for a\n\t * plugin.\n\t */\n\tprefix?: \"\" | (string & Record<never, never>);\n\t/**\n\t * The base url of the schema. By default it's the baseURL of the fetch instance.\n\t */\n\tbaseURL?: \"\" | (string & Record<never, never>);\n};\n\nexport type Schema = {\n\tschema: FetchSchemaRoutes;\n\tconfig: SchemaConfig;\n};\n", "import { betterFetch } from \"../fetch\";\nimport { BetterFetchPlugin } from \"../plugins\";\nimport type { BetterFetchOption } from \"../types\";\nimport type { BetterFetch, CreateFetchOption } from \"./types\";\n\nexport const applySchemaPlugin = (config: CreateFetchOption) =>\n\t({\n\t\tid: \"apply-schema\",\n\t\tname: \"Apply Schema\",\n\t\tversion: \"1.0.0\",\n\t\tasync init(url, options) {\n\t\t\tconst schema =\n\t\t\t\tconfig.plugins?.find((plugin) =>\n\t\t\t\t\tplugin.schema?.config\n\t\t\t\t\t\t? url.startsWith(plugin.schema.config.baseURL || \"\") ||\n\t\t\t\t\t\t\turl.startsWith(plugin.schema.config.prefix || \"\")\n\t\t\t\t\t\t: false,\n\t\t\t\t)?.schema || config.schema;\n\t\t\tif (schema) {\n\t\t\t\tlet urlKey = url;\n\t\t\t\tif (schema.config?.prefix) {\n\t\t\t\t\tif (urlKey.startsWith(schema.config.prefix)) {\n\t\t\t\t\t\turlKey = urlKey.replace(schema.config.prefix, \"\");\n\t\t\t\t\t\tif (schema.config.baseURL) {\n\t\t\t\t\t\t\turl = url.replace(schema.config.prefix, schema.config.baseURL);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (schema.config?.baseURL) {\n\t\t\t\t\tif (urlKey.startsWith(schema.config.baseURL)) {\n\t\t\t\t\t\turlKey = urlKey.replace(schema.config.baseURL, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst keySchema = schema.schema[urlKey];\n\t\t\t\tif (keySchema) {\n\t\t\t\t\tlet opts = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tmethod: keySchema.method,\n\t\t\t\t\t\toutput: keySchema.output,\n\t\t\t\t\t};\n\t\t\t\t\tif (!options?.disableValidation) {\n\t\t\t\t\t\topts = {\n\t\t\t\t\t\t\t...opts,\n\t\t\t\t\t\t\tbody: keySchema.input\n\t\t\t\t\t\t\t\t? keySchema.input.parse(options?.body)\n\t\t\t\t\t\t\t\t: options?.body,\n\t\t\t\t\t\t\tparams: keySchema.params\n\t\t\t\t\t\t\t\t? keySchema.params.parse(options?.params)\n\t\t\t\t\t\t\t\t: options?.params,\n\t\t\t\t\t\t\tquery: keySchema.query\n\t\t\t\t\t\t\t\t? keySchema.query.parse(options?.query)\n\t\t\t\t\t\t\t\t: options?.query,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\toptions: opts,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\turl,\n\t\t\t\toptions,\n\t\t\t};\n\t\t},\n\t}) satisfies BetterFetchPlugin;\n\nexport const createFetch = <Option extends CreateFetchOption>(\n\tconfig?: Option,\n) => {\n\tasync function $fetch(url: string, options?: BetterFetchOption) {\n\t\tconst opts = {\n\t\t\t...config,\n\t\t\t...options,\n\t\t\tplugins: [...(config?.plugins || []), applySchemaPlugin(config || {})],\n\t\t} as BetterFetchOption;\n\n\t\tif (config?.catchAllError) {\n\t\t\ttry {\n\t\t\t\treturn await betterFetch(url, opts);\n\t\t\t} catch (error) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: null,\n\t\t\t\t\terror: {\n\t\t\t\t\t\tstatus: 500,\n\t\t\t\t\t\tstatusText: \"Fetch Error\",\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\"Fetch related error. Captured by catchAllError option. See error property for more details.\",\n\t\t\t\t\t\terror,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn await betterFetch(url, opts);\n\t}\n\treturn $fetch as BetterFetch<Option>;\n};\n\nexport * from \"./schema\";\nexport * from \"./types\";\n", "import { getAuthHeader } from \"./auth\";\nimport { methods } from \"./create-fetch\";\nimport type { BetterFetchOption, FetchEsque } from \"./types\";\n\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\n\nexport type ResponseType = \"json\" | \"text\" | \"blob\";\nexport function detectResponseType(request: Response): ResponseType {\n\tconst _contentType = request.headers.get(\"content-type\");\n\tconst textTypes = new Set([\n\t\t\"image/svg\",\n\t\t\"application/xml\",\n\t\t\"application/xhtml\",\n\t\t\"application/html\",\n\t]);\n\tif (!_contentType) {\n\t\treturn \"json\";\n\t}\n\tconst contentType = _contentType.split(\";\").shift() || \"\";\n\tif (JSON_RE.test(contentType)) {\n\t\treturn \"json\";\n\t}\n\tif (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n\t\treturn \"text\";\n\t}\n\treturn \"blob\";\n}\n\nexport function isJSONParsable(value: any) {\n\ttry {\n\t\tJSON.parse(value);\n\t\treturn true;\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\n//https://github.com/unjs/ofetch/blob/main/src/utils.ts\nexport function isJSONSerializable(value: any) {\n\tif (value === undefined) {\n\t\treturn false;\n\t}\n\tconst t = typeof value;\n\tif (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n\t\treturn true;\n\t}\n\tif (t !== \"object\") {\n\t\treturn false;\n\t}\n\tif (Array.isArray(value)) {\n\t\treturn true;\n\t}\n\tif (value.buffer) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t(value.constructor && value.constructor.name === \"Object\") ||\n\t\ttypeof value.toJSON === \"function\"\n\t);\n}\n\nexport function jsonParse(text: string) {\n\ttry {\n\t\treturn JSON.parse(text);\n\t} catch (error) {\n\t\treturn text;\n\t}\n}\n\nexport function isFunction(value: any): value is () => any {\n\treturn typeof value === \"function\";\n}\n\nexport function getFetch(options?: BetterFetchOption): FetchEsque {\n\tif (options?.customFetchImpl) {\n\t\treturn options.customFetchImpl;\n\t}\n\tif (typeof globalThis !== \"undefined\" && isFunction(globalThis.fetch)) {\n\t\treturn globalThis.fetch;\n\t}\n\tif (typeof window !== \"undefined\" && isFunction(window.fetch)) {\n\t\treturn window.fetch;\n\t}\n\tthrow new Error(\"No fetch implementation found\");\n}\n\nexport function isPayloadMethod(method?: string) {\n\tif (!method) {\n\t\treturn false;\n\t}\n\tconst payloadMethod = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\n\treturn payloadMethod.includes(method.toUpperCase());\n}\n\nexport function isRouteMethod(method?: string) {\n\tconst routeMethod = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\n\tif (!method) {\n\t\treturn false;\n\t}\n\treturn routeMethod.includes(method.toUpperCase());\n}\n\nexport function getHeaders(opts?: BetterFetchOption) {\n\tconst headers = new Headers(opts?.headers);\n\tconst authHeader = getAuthHeader(opts);\n\tfor (const [key, value] of Object.entries(authHeader || {})) {\n\t\theaders.set(key, value);\n\t}\n\tif (!headers.has(\"content-type\")) {\n\t\tconst t = detectContentType(opts?.body);\n\t\tif (t) {\n\t\t\theaders.set(\"content-type\", t);\n\t\t}\n\t}\n\n\treturn headers;\n}\n\nexport function getURL(url: string, options?: BetterFetchOption) {\n\tif (url.startsWith(\"@\")) {\n\t\tconst m = url.toString().split(\"@\")[1].split(\"/\")[0];\n\t\tif (methods.includes(m)) {\n\t\t\turl = url.replace(`@${m}/`, \"/\");\n\t\t}\n\t}\n\tlet _url: string | URL;\n\ttry {\n\t\tif (url.startsWith(\"http\")) {\n\t\t\t_url = url;\n\t\t} else {\n\t\t\tlet baseURL = options?.baseURL;\n\t\t\tif (baseURL && !baseURL?.endsWith(\"/\")) {\n\t\t\t\tbaseURL = baseURL + \"/\";\n\t\t\t}\n\t\t\tif (url.startsWith(\"/\")) {\n\t\t\t\t_url = new URL(url.substring(1), baseURL);\n\t\t\t} else {\n\t\t\t\t_url = new URL(url, options?.baseURL);\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tif (e instanceof TypeError) {\n\t\t\tif (!options?.baseURL) {\n\t\t\t\tthrow TypeError(\n\t\t\t\t\t`Invalid URL ${url}. Are you passing in a relative url but not setting the baseURL?`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow TypeError(\n\t\t\t\t`Invalid URL ${url}. Please validate that you are passing the correct input.`,\n\t\t\t);\n\t\t}\n\t\tthrow e;\n\t}\n\n\t/**\n\t * Dynamic Parameters.\n\t */\n\tif (options?.params) {\n\t\tif (Array.isArray(options?.params)) {\n\t\t\tconst params = options?.params\n\t\t\t\t? Array.isArray(options.params)\n\t\t\t\t\t? `/${options.params.join(\"/\")}`\n\t\t\t\t\t: `/${Object.values(options.params).join(\"/\")}`\n\t\t\t\t: \"\";\n\t\t\t_url = _url.toString().split(\"/:\")[0];\n\t\t\t_url = `${_url.toString()}${params}`;\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(options?.params)) {\n\t\t\t\t_url = _url.toString().replace(`:${key}`, String(value));\n\t\t\t}\n\t\t}\n\t}\n\tconst __url = new URL(_url);\n\t/**\n\t * Query Parameters\n\t */\n\tconst queryParams = options?.query;\n\tif (queryParams) {\n\t\tfor (const [key, value] of Object.entries(queryParams)) {\n\t\t\t__url.searchParams.append(key, String(value));\n\t\t}\n\t}\n\treturn __url;\n}\n\nexport function detectContentType(body: any) {\n\tif (isJSONSerializable(body)) {\n\t\treturn \"application/json\";\n\t}\n\n\treturn null;\n}\n\nexport function getBody(options?: BetterFetchOption) {\n\tif (!options?.body) {\n\t\treturn null;\n\t}\n\tconst headers = new Headers(options?.headers);\n\tif (isJSONSerializable(options.body) && !headers.has(\"content-type\")) {\n\t\treturn JSON.stringify(options.body);\n\t}\n\n\treturn options.body;\n}\n\nexport function getMethod(url: string, options?: BetterFetchOption) {\n\tif (options?.method) {\n\t\treturn options.method.toUpperCase();\n\t}\n\tif (url.startsWith(\"@\")) {\n\t\tconst pMethod = url.split(\"@\")[1]?.split(\"/\")[0];\n\t\tif (!methods.includes(pMethod)) {\n\t\t\treturn options?.body ? \"POST\" : \"GET\";\n\t\t}\n\t\treturn pMethod.toUpperCase();\n\t}\n\treturn options?.body ? \"POST\" : \"GET\";\n}\n\nexport function getTimeout(\n\toptions?: BetterFetchOption,\n\tcontroller?: AbortController,\n) {\n\tlet abortTimeout: ReturnType<typeof setTimeout> | undefined;\n\tif (!options?.signal && options?.timeout) {\n\t\tabortTimeout = setTimeout(() => controller?.abort(), options?.timeout);\n\t}\n\treturn {\n\t\tabortTimeout,\n\t\tclearTimeout: () => {\n\t\t\tif (abortTimeout) {\n\t\t\t\tclearTimeout(abortTimeout);\n\t\t\t}\n\t\t},\n\t};\n}\n\nexport function bodyParser(data: any, responseType: ResponseType) {\n\tif (responseType === \"json\") {\n\t\treturn JSON.parse(data);\n\t}\n\treturn data;\n}\n", "import { methods } from \"./create-fetch\";\nimport { BetterFetchOption } from \"./types\";\n\n/**\n * Normalize URL\n */\nexport function getURL(url: string, option?: BetterFetchOption) {\n\tlet { baseURL, params, query } = option || {\n\t\tquery: {},\n\t\tparams: {},\n\t\tbaseURL: \"\",\n\t};\n\tlet basePath = url.startsWith(\"http\")\n\t\t? url.split(\"/\").slice(0, 3).join(\"/\")\n\t\t: baseURL;\n\tif (!basePath) {\n\t\tthrow new TypeError(\n\t\t\t`Invalid URL ${url}. Are you passing in a relative URL but not setting the baseURL?`,\n\t\t);\n\t}\n\n\t/**\n\t * Remove method modifiers\n\t */\n\tif (url.startsWith(\"@\")) {\n\t\tconst m = url.toString().split(\"@\")[1].split(\"/\")[0];\n\t\tif (methods.includes(m)) {\n\t\t\turl = url.replace(`@${m}/`, \"/\");\n\t\t}\n\t}\n\n\tif (!basePath.endsWith(\"/\")) basePath += \"/\";\n\tlet [path, urlQuery] = url.replace(basePath, \"\").split(\"?\");\n\tconst queryParams = new URLSearchParams(urlQuery);\n\tfor (const [key, value] of Object.entries(query || {})) {\n\t\tqueryParams.set(key, String(value));\n\t}\n\tif (params) {\n\t\tif (Array.isArray(params)) {\n\t\t\tconst paramPaths = path.split(\"/\").filter((p) => p.startsWith(\":\"));\n\t\t\tfor (const [index, key] of paramPaths.entries()) {\n\t\t\t\tconst value = params[index];\n\t\t\t\tpath = path.replace(key, value);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\t\tpath = path.replace(`:${key}`, String(value));\n\t\t\t}\n\t\t}\n\t}\n\n\tpath = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n\tif (path.startsWith(\"/\")) path = path.slice(1);\n\tlet queryParamString =\n\t\tqueryParams.size > 0 ? `?${queryParams}`.replace(/\\+/g, \"%20\") : \"\";\n\tconst _url = new URL(`${path}${queryParamString}`, basePath);\n\treturn _url;\n}\n", "import type { ZodSchema, z } from \"zod\";\nimport { BetterFetchError } from \"./error\";\nimport { initializePlugins } from \"./plugins\";\nimport { createRetryStrategy } from \"./retry\";\nimport type { BetterFetchOption, BetterFetchResponse } from \"./types\";\nimport {\n\tdetectResponseType,\n\tgetBody,\n\tgetFetch,\n\tgetHeaders,\n\tgetMethod,\n\tgetTimeout,\n\tisJSONParsable,\n\tjsonParse,\n} from \"./utils\";\nimport { getURL } from \"./url\";\n\nexport const betterFetch = async <\n\tTRes extends Option[\"output\"] extends ZodSchema\n\t\t? z.infer<Option[\"output\"]>\n\t\t: unknown,\n\tTErr = unknown,\n\tOption extends BetterFetchOption = BetterFetchOption<any, any, any, TRes>,\n>(\n\turl: string,\n\toptions?: Option,\n): Promise<\n\tBetterFetchResponse<\n\t\tTRes,\n\t\tTErr,\n\t\tOption[\"throw\"] extends true ? true : TErr extends false ? true : false\n\t>\n> => {\n\tconst {\n\t\thooks,\n\t\turl: __url,\n\t\toptions: opts,\n\t} = await initializePlugins(url, options);\n\tconst fetch = getFetch(opts);\n\tconst controller = new AbortController();\n\tconst signal = opts.signal ?? controller.signal;\n\tconst _url = getURL(__url, opts);\n\tconst body = getBody(opts);\n\tconst headers = getHeaders(opts);\n\tconst method = getMethod(__url, opts);\n\tlet context = {\n\t\t...opts,\n\t\turl: _url,\n\t\theaders,\n\t\tbody,\n\t\tmethod,\n\t\tsignal,\n\t};\n\t/**\n\t * Run all on request hooks\n\t */\n\tfor (const onRequest of hooks.onRequest) {\n\t\tif (onRequest) {\n\t\t\tconst res = await onRequest(context);\n\t\t\tif (res instanceof Object) {\n\t\t\t\tcontext = res;\n\t\t\t}\n\t\t}\n\t}\n\tif (\n\t\t(\"pipeTo\" in (context as any) &&\n\t\t\ttypeof (context as any).pipeTo === \"function\") ||\n\t\ttypeof options?.body?.pipe === \"function\"\n\t) {\n\t\tif (!(\"duplex\" in context)) {\n\t\t\tcontext.duplex = \"half\";\n\t\t}\n\t}\n\n\tconst { clearTimeout } = getTimeout(opts, controller);\n\tlet response = await fetch(context.url, context);\n\tclearTimeout();\n\n\tconst responseContext = {\n\t\tresponse,\n\t\trequest: context,\n\t};\n\n\tfor (const onResponse of hooks.onResponse) {\n\t\tif (onResponse) {\n\t\t\tconst r = await onResponse({\n\t\t\t\t...responseContext,\n\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t? response.clone()\n\t\t\t\t\t: response,\n\t\t\t});\n\t\t\tif (r instanceof Response) {\n\t\t\t\tresponse = r;\n\t\t\t} else if (r instanceof Object) {\n\t\t\t\tresponse = r.response;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * OK Branch\n\t */\n\tif (response.ok) {\n\t\tconst hasBody = context.method !== \"HEAD\";\n\t\tif (!hasBody) {\n\t\t\treturn {\n\t\t\t\tdata: \"\" as any,\n\t\t\t\terror: null,\n\t\t\t} as any;\n\t\t}\n\t\tconst responseType = detectResponseType(response);\n\t\tconst successContext = {\n\t\t\tdata: \"\" as any,\n\t\t\tresponse,\n\t\t\trequest: context,\n\t\t};\n\t\tif (responseType === \"json\" || responseType === \"text\") {\n\t\t\tconst text = await response.text();\n\t\t\tconst parser = context.jsonParser ?? jsonParse;\n\t\t\tconst data = await parser(text);\n\t\t\tsuccessContext.data = data;\n\t\t} else {\n\t\t\tsuccessContext.data = await response[responseType]();\n\t\t}\n\n\t\t/**\n\t\t * Parse the data if the output schema is defined\n\t\t */\n\t\tif (context?.output) {\n\t\t\tif (context.output && !context.disableValidation) {\n\t\t\t\tsuccessContext.data = (context.output as ZodSchema).parse(\n\t\t\t\t\tsuccessContext.data,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const onSuccess of hooks.onSuccess) {\n\t\t\tif (onSuccess) {\n\t\t\t\tawait onSuccess({\n\t\t\t\t\t...successContext,\n\t\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t\t? response.clone()\n\t\t\t\t\t\t: response,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (options?.throw) {\n\t\t\treturn successContext.data as any;\n\t\t}\n\n\t\treturn {\n\t\t\tdata: successContext.data,\n\t\t\terror: null,\n\t\t} as any;\n\t}\n\tconst parser = options?.jsonParser ?? jsonParse;\n\tconst text = await response.text();\n\tconst errorObject = isJSONParsable(text) ? await parser(text) : {};\n\t/**\n\t * Error Branch\n\t */\n\tconst errorContext = {\n\t\tresponse,\n\t\trequest: context,\n\t\terror: {\n\t\t\t...errorObject,\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText,\n\t\t},\n\t};\n\tfor (const onError of hooks.onError) {\n\t\tif (onError) {\n\t\t\tawait onError({\n\t\t\t\t...errorContext,\n\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t? response.clone()\n\t\t\t\t\t: response,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (options?.retry) {\n\t\tconst retryStrategy = createRetryStrategy(options.retry);\n\t\tconst _retryAttempt = options.retryAttempt ?? 0;\n\t\tif (await retryStrategy.shouldAttemptRetry(_retryAttempt, response)) {\n\t\t\tfor (const onRetry of hooks.onRetry) {\n\t\t\t\tif (onRetry) {\n\t\t\t\t\tawait onRetry(responseContext);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst delay = retryStrategy.getDelay(_retryAttempt);\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, delay));\n\t\t\treturn await betterFetch(url, {\n\t\t\t\t...options,\n\t\t\t\tretryAttempt: _retryAttempt + 1,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (options?.throw) {\n\t\tthrow new BetterFetchError(\n\t\t\tresponse.status,\n\t\t\tresponse.statusText,\n\t\t\terrorObject,\n\t\t);\n\t}\n\treturn {\n\t\tdata: null,\n\t\terror: {\n\t\t\t...errorObject,\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText,\n\t\t},\n\t} as any;\n};\n", "import { cleanTasks } from '../task/index.js'\n\nexport let clean = Symbol('clean')\n\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      'cleanStores() can be used only during development or tests'\n    )\n  }\n  cleanTasks()\n  for (let $store of stores) {\n    if ($store) {\n      if ($store.mocked) delete $store.mocked\n      if ($store[clean]) $store[clean]()\n    }\n  }\n}\n", "import { clean } from '../clean-stores/index.js'\n\nlet listenerQueue = []\nlet lqIndex = 0\nconst QUEUE_ITEMS_PER_LISTENER = 4\nexport let epoch = 0\n\nexport let atom = (initialValue) => {\n  let listeners = []\n  let $atom = {\n    get() {\n      if (!$atom.lc) {\n        $atom.listen(() => {})()\n      }\n      return $atom.value\n    },\n    lc: 0,\n    listen(listener) {\n      $atom.lc = listeners.push(listener)\n\n      return () => {\n        for (let i = lqIndex + QUEUE_ITEMS_PER_LISTENER; i < listenerQueue.length;) {\n          if (listenerQueue[i] === listener) {\n            listenerQueue.splice(i, QUEUE_ITEMS_PER_LISTENER)\n          } else {\n            i += QUEUE_ITEMS_PER_LISTENER\n          }\n        }\n\n        let index = listeners.indexOf(listener)\n        if (~index) {\n          listeners.splice(index, 1)\n          if (!--$atom.lc) $atom.off()\n        }\n      }\n    },\n    notify(oldValue, changedKey) {\n      epoch++\n      let runListenerQueue = !listenerQueue.length\n      for (let listener of listeners) {\n        listenerQueue.push(\n          listener,\n          $atom.value,\n          oldValue,\n          changedKey\n        )\n      }\n\n      if (runListenerQueue) {\n        for (lqIndex = 0; lqIndex < listenerQueue.length; lqIndex += QUEUE_ITEMS_PER_LISTENER) {\n            listenerQueue[lqIndex](\n              listenerQueue[lqIndex + 1],\n              listenerQueue[lqIndex + 2],\n              listenerQueue[lqIndex + 3]\n            )\n        }\n        listenerQueue.length = 0\n      }\n    },\n    /* It will be called on last listener unsubscribing.\n       We will redefine it in onMount and onStop. */\n    off() {},\n    set(newValue) {\n      let oldValue = $atom.value\n      if (oldValue !== newValue) {\n        $atom.value = newValue\n        $atom.notify(oldValue)\n      }\n    },\n    subscribe(listener) {\n      let unbind = $atom.listen(listener)\n      listener($atom.value)\n      return unbind\n    },\n    value: initialValue\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    $atom[clean] = () => {\n      listeners = []\n      $atom.lc = 0\n      $atom.off()\n    }\n  }\n\n  return $atom\n}\n", "import { clean } from '../clean-stores/index.js'\n\nconst START = 0\nconst STOP = 1\nconst SET = 2\nconst NOTIFY = 3\nconst MOUNT = 5\nconst UNMOUNT = 6\nconst REVERT_MUTATION = 10\n\nexport let on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {}\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      })\n    })\n  }\n  object.events[eventKey] = object.events[eventKey] || []\n  object.events[eventKey].push(listener)\n  return () => {\n    let currentListeners = object.events[eventKey]\n    let index = currentListeners.indexOf(listener)\n    currentListeners.splice(index, 1)\n    if (!currentListeners.length) {\n      delete object.events[eventKey]\n      object.events[eventKey + REVERT_MUTATION]()\n      delete object.events[eventKey + REVERT_MUTATION]\n    }\n  }\n}\n\nexport let onStart = ($store, listener) =>\n  on($store, listener, START, runListeners => {\n    let originListen = $store.listen\n    $store.listen = arg => {\n      if (!$store.lc && !$store.starting) {\n        $store.starting = true\n        runListeners()\n        delete $store.starting\n      }\n      return originListen(arg)\n    }\n    return () => {\n      $store.listen = originListen\n    }\n  })\n\nexport let onStop = ($store, listener) =>\n  on($store, listener, STOP, runListeners => {\n    let originOff = $store.off\n    $store.off = () => {\n      runListeners()\n      originOff()\n    }\n    return () => {\n      $store.off = originOff\n    }\n  })\n\nexport let onSet = ($store, listener) =>\n  on($store, listener, SET, runListeners => {\n    let originSet = $store.set\n    let originSetKey = $store.setKey\n    if ($store.setKey) {\n      $store.setKey = (changed, changedValue) => {\n        let isAborted\n        let abort = () => {\n          isAborted = true\n        }\n\n        runListeners({\n          abort,\n          changed,\n          newValue: { ...$store.value, [changed]: changedValue }\n        })\n        if (!isAborted) return originSetKey(changed, changedValue)\n      }\n    }\n    $store.set = newValue => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, newValue })\n      if (!isAborted) return originSet(newValue)\n    }\n    return () => {\n      $store.set = originSet\n      $store.setKey = originSetKey\n    }\n  })\n\nexport let onNotify = ($store, listener) =>\n  on($store, listener, NOTIFY, runListeners => {\n    let originNotify = $store.notify\n    $store.notify = (oldValue, changed) => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, changed, oldValue })\n      if (!isAborted) return originNotify(oldValue, changed)\n    }\n    return () => {\n      $store.notify = originNotify\n    }\n  })\n\nexport let STORE_UNMOUNT_DELAY = 1000\n\nexport let onMount = ($store, initialize) => {\n  let listener = payload => {\n    let destroy = initialize(payload)\n    if (destroy) $store.events[UNMOUNT].push(destroy)\n  }\n  return on($store, listener, MOUNT, runListeners => {\n    let originListen = $store.listen\n    $store.listen = (...args) => {\n      if (!$store.lc && !$store.active) {\n        $store.active = true\n        runListeners()\n      }\n      return originListen(...args)\n    }\n\n    let originOff = $store.off\n    $store.events[UNMOUNT] = []\n    $store.off = () => {\n      originOff()\n      setTimeout(() => {\n        if ($store.active && !$store.lc) {\n          $store.active = false\n          for (let destroy of $store.events[UNMOUNT]) destroy()\n          $store.events[UNMOUNT] = []\n        }\n      }, STORE_UNMOUNT_DELAY)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = $store[clean]\n      $store[clean] = () => {\n        for (let destroy of $store.events[UNMOUNT]) destroy()\n        $store.events[UNMOUNT] = []\n        $store.active = false\n        originClean()\n      }\n    }\n\n    return () => {\n      $store.listen = originListen\n      $store.off = originOff\n    }\n  })\n}\n", "import{createFetch as Q}from\"@better-fetch/fetch\";var P=Object.create(null),m=e=>globalThis.process?.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?P:globalThis),g=new Proxy(P,{get(e,t){return m()[t]??P[t]},has(e,t){let n=m();return t in n||t in P},set(e,t,n){let u=m(!0);return u[t]=n,!0},deleteProperty(e,t){if(!t)return!1;let n=m(!0);return delete n[t],!0},ownKeys(){let e=m(!0);return Object.keys(e)}});function N(e){return e?e!==\"false\":!1}var D=typeof process<\"u\"&&process.env&&process.env.NODE_ENV||\"\";var Z=D===\"test\"||N(g.TEST);var T=class extends Error{constructor(t,n){super(t),this.name=\"BetterAuthError\",this.message=t,this.cause=n,this.stack=\"\"}};function j(e){try{return new URL(e).pathname!==\"/\"}catch{throw new T(`Invalid base URL: ${e}. Please provide a valid base URL.`)}}function b(e,t=\"/api/auth\"){return j(e)?e:(t=t.startsWith(\"/\")?t:`/${t}`,`${e}${t}`)}function E(e,t){if(e)return b(e,t);let n=g.BETTER_AUTH_URL||g.NEXT_PUBLIC_BETTER_AUTH_URL||g.PUBLIC_BETTER_AUTH_URL||g.NUXT_PUBLIC_BETTER_AUTH_URL||g.NUXT_PUBLIC_AUTH_URL||(g.BASE_URL!==\"/\"?g.BASE_URL:void 0);if(n)return b(n,t);if(typeof window<\"u\"&&window.location)return b(window.location.origin,t)}import\"nanostores\";import\"@better-fetch/fetch\";var _={id:\"redirect\",name:\"Redirect\",hooks:{onSuccess(e){if(e.data?.url&&e.data?.redirect&&typeof window<\"u\"&&window.location&&window.location)try{window.location.href=e.data.url}catch{}}}},w={id:\"add-current-url\",name:\"Add current URL\",hooks:{onRequest(e){if(typeof window<\"u\"&&window.location&&window.location)try{let t=new URL(e.url);t.searchParams.set(\"currentURL\",window.location.href),e.url=t}catch{}return e}}};import{atom as M}from\"nanostores\";import\"@better-fetch/fetch\";import{atom as q,onMount as H}from\"nanostores\";var U=(e,t,n,u)=>{let o=q({data:null,error:null,isPending:!0,isRefetching:!1}),p=()=>{let l=typeof u==\"function\"?u({data:o.get().data,error:o.get().error,isPending:o.get().isPending}):u;return n(t,{...l,async onSuccess(f){o.set({data:f.data,error:null,isPending:!1,isRefetching:!1}),await l?.onSuccess?.(f)},async onError(f){o.set({error:f.error,data:null,isPending:!1,isRefetching:!1}),await l?.onError?.(f)},async onRequest(f){let i=o.get();o.set({isPending:i.data===null,data:i.data,error:null,isRefetching:!0}),await l?.onRequest?.(f)}})};e=Array.isArray(e)?e:[e];let a=!1;for(let l of e)l.subscribe(()=>{a?p():H(o,()=>(p(),a=!0,()=>{o.off(),l.off()}))});return o};function I(e){let t=M(!1);return{session:U(t,\"/get-session\",e,{method:\"GET\"}),$sessionSignal:t}}var V={proto:/\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/,constructor:/\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/,protoShort:/\"__proto__\"\\s*:/,constructorShort:/\"constructor\"\\s*:/},W=/^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/,x={true:!0,false:!1,null:null,undefined:void 0,nan:Number.NaN,infinity:Number.POSITIVE_INFINITY,\"-infinity\":Number.NEGATIVE_INFINITY},G=/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,7}))?(?:Z|([+-])(\\d{2}):(\\d{2}))$/;function J(e){return e instanceof Date&&!isNaN(e.getTime())}function z(e){let t=G.exec(e);if(!t)return null;let[,n,u,o,p,a,l,f,i,s,c]=t,d=new Date(Date.UTC(parseInt(n,10),parseInt(u,10)-1,parseInt(o,10),parseInt(p,10),parseInt(a,10),parseInt(l,10),f?parseInt(f.padEnd(3,\"0\"),10):0));if(i){let r=(parseInt(s,10)*60+parseInt(c,10))*(i===\"+\"?-1:1);d.setUTCMinutes(d.getUTCMinutes()+r)}return J(d)?d:null}function X(e,t={}){let{strict:n=!1,warnings:u=!1,reviver:o,parseDates:p=!0}=t;if(typeof e!=\"string\")return e;let a=e.trim();if(a[0]==='\"'&&a.endsWith('\"')&&!a.slice(1,-1).includes('\"'))return a.slice(1,-1);let l=a.toLowerCase();if(l.length<=9&&l in x)return x[l];if(!W.test(a)){if(n)throw new SyntaxError(\"[better-json] Invalid JSON\");return e}if(Object.entries(V).some(([i,s])=>{let c=s.test(a);return c&&u&&console.warn(`[better-json] Detected potential prototype pollution attempt using ${i} pattern`),c})&&n)throw new Error(\"[better-json] Potential prototype pollution attempt detected\");try{return JSON.parse(a,(s,c)=>{if(s===\"__proto__\"||s===\"constructor\"&&c&&typeof c==\"object\"&&\"prototype\"in c){u&&console.warn(`[better-json] Dropping \"${s}\" key to prevent prototype pollution`);return}if(p&&typeof c==\"string\"){let d=z(c);if(d)return d}return o?o(s,c):c})}catch(i){if(n)throw i;return e}}function B(e,t={strict:!0}){return X(e,t)}var L=e=>{let t=\"credentials\"in Request.prototype,n=E(e?.baseURL),u=e?.plugins?.flatMap(r=>r.fetchPlugins).filter(r=>r!==void 0)||[],o=Q({baseURL:n,...t?{credentials:\"include\"}:{},method:\"GET\",jsonParser(r){return B(r,{strict:!1})},...e?.fetchOptions,plugins:e?.disableDefaultFetchPlugins?[...e?.fetchOptions?.plugins||[],...u]:[_,w,...e?.fetchOptions?.plugins||[],...u]}),{$sessionSignal:p,session:a}=I(o),l=e?.plugins||[],f={},i={$sessionSignal:p,session:a},s={\"/sign-out\":\"POST\",\"/revoke-sessions\":\"POST\",\"/revoke-other-sessions\":\"POST\",\"/delete-user\":\"POST\"},c=[{signal:\"$sessionSignal\",matcher(r){return r===\"/sign-out\"||r===\"/update-user\"||r.startsWith(\"/sign-in\")||r.startsWith(\"/sign-up\")}}];for(let r of l)r.getAtoms&&Object.assign(i,r.getAtoms?.(o)),r.pathMethods&&Object.assign(s,r.pathMethods),r.atomListeners&&c.push(...r.atomListeners);let d={notify:r=>{i[r].set(!i[r].get())},listen:(r,O)=>{i[r].subscribe(O)},atoms:i};for(let r of l)r.getActions&&Object.assign(f,r.getActions?.(o,d));return{pluginsActions:f,pluginsAtoms:i,pluginPathMethods:s,atomListeners:c,$fetch:o,$store:d}};function C(e){return e.charAt(0).toUpperCase()+e.slice(1)}function Y(e,t,n){let u=t[e],{fetchOptions:o,query:p,...a}=n||{};return u||(o?.method?o.method:a&&Object.keys(a).length>0?\"POST\":\"GET\")}function v(e,t,n,u,o){function p(a=[]){return new Proxy(function(){},{get(l,f){let i=[...a,f],s=e;for(let c of i)if(s&&typeof s==\"object\"&&c in s)s=s[c];else{s=void 0;break}return typeof s==\"function\"?s:p(i)},apply:async(l,f,i)=>{let s=\"/\"+a.map(R=>R.replace(/[A-Z]/g,y=>`-${y.toLowerCase()}`)).join(\"/\"),c=i[0]||{},d=i[1]||{},{query:r,fetchOptions:O,...F}=c,h={...d,...O},S=Y(s,n,c);return await t(s,{...h,body:S===\"GET\"?void 0:{...F,...h?.body||{}},query:r||h?.query,method:S,async onSuccess(R){await h?.onSuccess?.(R);let y=o?.find(k=>k.matcher(s));if(!y)return;let A=u[y.signal];if(!A)return;let $=A.get();setTimeout(()=>{A.set(!$)},10)}})}})}return p()}function _e(e){let{pluginPathMethods:t,pluginsActions:n,pluginsAtoms:u,$fetch:o,atomListeners:p,$store:a}=L(e),l={};for(let[s,c]of Object.entries(u))l[`use${C(s)}`]=c;let f={...n,...l,$fetch:o,$store:a};return v(f,o,t,u,p)}var Ue=()=>({id:\"infer-server-plugin\",$InferServerPlugin:{}});export{Ue as InferPlugin,_e as createAuthClient,U as useAuthQuery};\n", "import { createAuthClient } from \"better-auth/client\";\r\n// import \"@starfederation/datastar\";\r\nexport const authClient = createAuthClient({\r\n  baseURL: \"http://localhost:3000\", // the base url of your auth server\r\n});\r\n\r\nexport async function signUp(name, email, password) {\r\n  console.log(name, email, password);\r\n  const { data, error } = await authClient.signUp.email(\r\n    {\r\n      email,\r\n      password,\r\n      name,\r\n      // image: image ? convertImageToBase64(image) : undefined,\r\n    },\r\n    {\r\n      onRequest: (ctx) => {},\r\n      onSuccess: (ctx) => {\r\n        alert(\"Success\");\r\n      },\r\n      onError: (ctx) => {\r\n        alert(ctx.error.message);\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nwindow.exerciseTracker = { signUp };\r\n"],
  "mappings": "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",
  "names": ["_e", "_a", "getURL", "m", "_e", "clearTimeout", "text", "parser"]
}
