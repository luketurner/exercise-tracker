mixin icon(iconName)
  -
    var iconClass = {
      assisted: "lifebuoy",
      weight: "weight",
      distance: "ruler-3",
      duration: "clock",
      intensity: "activity"
    }[iconName];
    if (!iconClass) iconClass = iconName;
  if iconName === 'reps'
    i&attributes(attributes) #
  else
    i.ti(class="ti-"+iconClass)&attributes(attributes)


mixin control(leftIcon, rightIcon)
  div.field&attributes(attributes)
    div(class={ 'control': true, 'has-icons-right': !!rightIcon, 'has-icons-left': !!leftIcon })
      block
      if leftIcon
        span.icon.is-small.is-left
          +icon(leftIcon)
      if rightIcon
        span.icon.is-small.is-right
          if ['min', 'reps', 'days'].includes(rightIcon)
            span= rightIcon
          else if allUnits && allUnits.find(unit => unit.id === rightIcon)
            span= allUnits.find(unit => unit.id === rightIcon).short
          else
            +icon(rightIcon)

mixin select(name, signalName, defaultValue, onChange, values)
  span.select
    select(
      name=name,
      data-on-change=onChange,
      data-signals=signalName ? "{'"+signalName+"': '"+defaultValue+"'}" : false
      data-bind=signalName || false
    )&attributes(attributes)
      each value in values
        option(value=value.id, selected=(defaultValue === value.id))= value.name

mixin selectAlpine(signalName, onChange, values, isLoadingSignal)
  span.select(x-bind:class=isLoadingSignal+" ? 'is-loading' : null")&attributes(attributes)
    select(
      x-on:change=onChange,
      x-model=signalName,
      x-bind:disabled=isLoadingSignal
    )
      each value in values
        option(value=value.id)= value.name


mixin helpTextBox(signalName, helpText)
  template(x-if=signalName)
    div.box.content.help-text
      div.icon.is-small.is-clickable.is-pulled-right(x-on:click=(signalName + " = false"))
        +icon("x")
      = helpText

mixin helpTextAnchor(signalName)
  span.icon.is-small.is-clickable(x-on:click=(signalName + " = !" + signalName))
    +icon("help")

mixin horizontalField(label, helpText)
  div.field.is-horizontal(x-data="{ showHelp: false }")
    div.field-label.is-normal.help-text-container
      label.label
        = label
        if helpText
          |  
          +helpTextAnchor("showHelp")
      +helpTextBox("showHelp", helpText)
    div.field-body&attributes(attributes)
      block

mixin lookbackPicker()
  .dropdown.is-right(x-bind:class="showLookback ? 'is-active' : ''", x-data="{ showLookback: false }")
    .dropdown-trigger
      button.button(aria-haspopup="true", aria-controls="lookback-picker", x-on:click="showLookback = !showLookback")
        span Lookback
        +icon("chevron-down")
    .dropdown-menu#lookback-picker(role="menu")
      .dropdown-content
        button.dropdown-item(x-on:click="_set.setQueryParam('lookback', '7')") 7d
        button.dropdown-item(x-on:click="_set.setQueryParam('lookback', '30')") 30d
        button.dropdown-item(x-on:click="_set.setQueryParam('lookback', '365')") 1y
        button.dropdown-item(x-on:click="_set.setQueryParam('lookback', 'all')") All time
        +control("clock", "days")(class="dropdown-item")
          input.input(type="number", min="0", x-on:change="_set.setQueryParam('lookback', $event.target.value)")
