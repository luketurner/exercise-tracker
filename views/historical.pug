extends _layout.pug

block content
  +control()
    a.button(href=back, x-bind:class="theme === 'dark' ? 'is-dark' : 'is-light'") Back
  .dropdown(x-bind:class="showLookback ? 'is-active' : ''", x-data="{ showLookback: false }", style="float: right")
    .dropdown-trigger
      button.button(aria-haspopup="true", aria-controls="lookback-picker", x-on:click="showLookback = !showLookback")
        span Lookback
        +icon("chevron-down")
    .dropdown-menu#lookback-picker(role="menu")
      .dropdown-content
        button.dropdown-item(x-on:click="window.location.search = 'lookback=7'") 7d
        button.dropdown-item(x-on:click="window.location.search = 'lookback=30'") 30d
        button.dropdown-item(x-on:click="window.location.search = 'lookback=365'") 1y
        button.dropdown-item(x-on:click="window.location.search = 'lookback=all'") All time
        +control("clock", "days")(class="dropdown-item")
          input.input(type="number", min="0", x-on:change="window.location.search = 'lookback='+ $event.target.value")
  h1.title= "History of " + exercise.name
  .fixed-grid.has-1-cols-mobile.has-2-cols-desktop.has-3-cols-widescreen
    .grid
      each param of exercise.parameters
        .cell
          .box
            h1.title(style="text-align: center;")
              +icon(param.id)
              |  
              = param.name
            canvas(id="chart-"+param.id)
        script!= "window._set.buildChart("+JSON.stringify(param)+","+JSON.stringify(historicalSets.map(s => ({date: s.date, value: getRawValue(s.parameters[param.id], param, user)})))+");"
  table.table
    thead
      tr
        td Parameter
        td Average
        td Min
        td Max
        td Total change
    tbody
      each param of exercise.parameters
        - var v = analysis[param.id]
        tr
          td
            +icon(param.id)
            |  
            = param.name
          td= displayRawValueForTable(v.average, param, user)
          td= displayRawValueForTable(v.min, param, user)
          td= displayRawValueForTable(v.max, param, user)
          td= displayRawValueForTable(v.totalChange, param, user)
  table.table
    thead
      tr
        td Date
        each param of exercise.parameters
            td
              +icon(param.id)
              |  
              = param.name
    tbody
      each set of historicalSets
        tr
          td= set.date
          each param of exercise.parameters
            td= displayStringForTable(set.parameters[param.id], param, user)