extends _layout.pug

block content
  div.field.has-addons.has-addons-centered.mb-5(data-signals-exercises=JSON.stringify(exercises))
    div.control
      a.button.is-large(href="/"+yesterday)
        span.icon
          +icon("chevron-left")
    div.control
      input.input.is-large#date(type="date", name="date", value=date, max=today, data-on-change="window.location.pathname = `/${evt.target.value}`")
    if !isToday
      div.control
        a.button.is-large(href="/"+tomorrow)
          span.icon
            +icon("chevron-right")
  each set in sets
    form(action="/sets/"+set.id+"/delete", method="POST", id="set-"+set.id+"-delete")
    div.fixed-grid.has-7-cols-desktop.has-4-cols-tablet.has-2-cols-mobile
      form.grid
        div.cell
          div.field.has-addons
            div.control
              button.button.is-danger.is-light(form="set-"+set.id+"-delete")
                span.icon
                  +icon("x")
            +control(null, null)
              +select(
                "exercise",
                "set"+set.id+"exerciseid",
                set.exercise.id,
                "@post('/sets/"+set.id+"', {contentType: 'form'})",
                exercises
              )
        each parameter in allParameters
          - var paramValue = set.parameters[parameter.id]
          div.cell(
            data-show="!!$exercises.find(v => v.id == $set"+set.id+"exerciseid)?.parameters?.find(p => p.id === '"+parameter.id+"')"
          )
            +control(
              parameter.id,
              parameter.dataType === 'weight' || parameter.dataType === 'distance' ? defaultUnit(parameter.dataType, user) : parameter.dataType === 'duration' ? 'min' : parameter.id === 'reps' ? 'reps' : null,
            )
              if parameter.dataType === 'weight' || parameter.dataType === 'distance'
                - var unit = defaultUnit(parameter.dataType, user)
                input.input(
                  id=parameter.id,
                  type="number",
                  name=parameter.id,
                  min="0", step="0.1"
                  value=paramValue ? convertUnit(paramValue.value, paramValue.unit, unit, 1) : null,
                  data-on-input__debounce.500ms.leading="@post('/sets/"+set.id+"', {contentType: 'form'})"
                )
              else if parameter.dataType === 'duration'
                input.input(
                  id=parameter.id,
                  type="number",
                  name=parameter.id,
                  value=paramValue ? paramValue.minutes : null,
                  data-on-input__debounce.500ms.leading="@post('/sets/"+set.id+"', {contentType: 'form'})"
                )
              else if parameter.dataType === 'intensity'
                +select(
                  "intensity",
                  null,
                  set.parameters.intensity,
                  "@post('/sets/"+set.id+"', {contentType: 'form'})",
                  allIntensities
                )
              else
                input.input(
                  id=parameter.id,
                  type="number",
                  name=parameter.id,
                  value=paramValue,
                  data-on-input__debounce.500ms.leading="@post('/sets/"+set.id+"', {contentType: 'form'})"
                )
  form
    +horizontalField("Add new set")
      .field
        +control()
          +select(
            "exercise",
            "setnewexerciseid",
            "",
            "@post('/sets', {contentType: 'form'}).then(() => window.location.reload())",
            exercises
          )
    input(type="hidden", name="date", value=date)
    input(type="hidden", name="order", value=nextSetOrder)